#
# Copyright (c) 2009 Sun Microsystems, Inc.
# All rights reserved.
# Use is subject to license terms.
#
# RI Specific tunable parameters
# Visible from com.sun.javacard.Configuration.getProperty(key)
#
# Note: There must be a blank line at end of the file, 
# or
# keep a comment line at the end.
# **** The last line is ignored. ****
#
# Index based properties starts with index 0. Properties are read from 0 until the sequence is broken.
# For example if the property names are like
#   myproperty.0, mypropert.1, myproperty.3, then the myproperty.3 is not read because the sequence is broken at .2
#
# These Properties are visible from JCRuntime.getConfigProperty()
#
#
#----//// Some RI level properties \\\\----#
system.i18n.lang: en
system.i18n.encoding: ISO8859_1
javacard.io.socket.buffersize: 256
#com.sun.javacard.io.http.proxy: webcache:8080
#com.sun.javacard.io.http.force_non_persistent: false
#com.sun.javacard.io.http.persistent_connection_linger_time: 60000
#com.sun.javacard.io.http.inputBufferSize: 256
#com.sun.javacard.io.http.outputBufferSize: 2048
#com.sun.javacard.io.http.max_persistent_connections: 4
#----//// [End] Some RI level properties \\\\----#
#
#----//// Platform Policy Default Protection Domains Configuration \\\\----#
#format of each line
#     <classname><space><each argument in double quotes seperated by , as if like calling a method>
#     Example:  MyPermission "arg1", "arg2", "arg3"
#
# Note: There is no error checking. If there is some problem while parsing the string,
# either it will be ignored or may have wrong values for the arguments.
#---- Web Domain ----
webDomain.include.0=javacardx.spi.framework.JCREPermission "callPermJCREEPO.EXTENDED"
webDomain.include.1=javacardx.spi.framework.JCREPermission "callPermJCREEPO.CLASSIC"
webDomain.include.2=javacardx.facilities.EventRegistryPermission "event:///~/*", "notify,register,unregister"
webDomain.include.3=javacardx.facilities.EventRegistryPermission "event:///platform/*", "register,unregister"
webDomain.include.4=javacardx.facilities.EventRegistryPermission "event:///standard/*", "register,unregister"
webDomain.include.5=javacardx.facilities.ServiceRegistryPermission "sio:///~/*", "lookup,register,unregister"
webDomain.include.6=javacardx.facilities.ServiceRegistryPermission "sio:///standard/auth/*", "lookup"
webDomain.include.7=javacardx.facilities.TaskRegistryPermission "task.*"
webDomain.include.8=javacardx.framework.ContextPermission "sio:///standard/auth/*", "switch,transfer"
webDomain.include.9=javacardx.framework.JCRuntimePermission "credentialManager.*"
webDomain.include.10=javacardx.framework.JCRuntimePermission "thread.*"
webDomain.include.11=javacardx.io.ConnectorPermission "file:///~/*", "read"
#webDomain.include.12=javacardx.io.ConnectorPermission file:///~/docroot/tmp write
#---- Extended Domain ----
extendedDomain.include.0=javacardx.spi.framework.JCREPermission "callPermJCREEPO.EXTENDED"
extendedDomain.include.1=javacardx.spi.framework.JCREPermission "callPermJCREEPO.CLASSIC"
extendedDomain.include.2=javacardx.spi.framework.JCREPermission "callTempJCREEPO.CLASSIC"
extendedDomain.include.3=javacardx.facilities.EventRegistryPermission "event://aid/~/*", "notify,register,unregister"
extendedDomain.include.4=javacardx.facilities.EventRegistryPermission "event:///platform/*", "register,unregister"
extendedDomain.include.5=javacardx.facilities.EventRegistryPermission "event:///standard/*", "register,unregister"
extendedDomain.include.6=javacardx.facilities.ServiceRegistryPermission "sio://aid/~/*", "lookup,register,unregister"
extendedDomain.include.7=javacardx.facilities.ServiceRegistryPermission "sio:///standard/auth/*", "lookup"
extendedDomain.include.8=javacardx.facilities.TaskRegistryPermission "task.*"
extendedDomain.include.9=javacardx.framework.ContextPermission "sio:///standard/auth/*", "switch,transfer"
extendedDomain.include.10=javacardx.framework.JCRuntimePermission "thread.*"
extendedDomain.include.11=javacardx.framework.JCRuntimePermission "credentialManager.*"
extendedDomain.include.12=javacardx.io.ConnectorPermission "file://aid/~/*", "read"
#---- Classic Domain ----
classicDomain.include.0=javacardx.spi.framework.JCREPermission "callPermJCREEPO.CLASSIC"
classicDomain.include.1=javacardx.spi.framework.JCREPermission "callTempJCREEPO.CLASSIC"
#---- CardManagement Domain ----
cmDomain.include.0=javacardx.spi.cardmgmt.CardManagementPermission "credentialManager.*"
cmDomain.include.1=javacardx.spi.framework.JCREPermission "callPermJCREEPO.EXTENDED"
cmDomain.include.2=javacardx.spi.framework.JCREPermission "callPermJCREEPO.CLASSIC"
cmDomain.include.3=javacardx.spi.framework.JCREPermission "callTempJCREEPO.CLASSIC"
cmDomain.include.4=javacardx.facilities.EventRegistryPermission "event://*/~/*", "notify,register,unregister"
cmDomain.include.5=javacardx.facilities.EventRegistryPermission "event://*/platform/*", "register,unregister"
cmDomain.include.6=javacardx.facilities.EventRegistryPermission "event://*/standard/*", "notify,register,unregister"
cmDomain.include.7=javacardx.facilities.ServiceRegistryPermission "sio://*/~/*", "lookup,register,unregister"
cmDomain.include.8=javacardx.facilities.ServiceRegistryPermission "sio://*/standard/auth/*", "register,unregister,lookup"
cmDomain.include.9=javacardx.facilities.TaskRegistryPermission "task.*"
cmDomain.include.10=javacardx.framework.ContextPermission "sio://*/standard/auth/*", "switch,transfer"
cmDomain.include.11=javacardx.framework.JCRuntimePermission "credentialManager.*"
cmDomain.include.12=javacardx.framework.JCRuntimePermission "thread.*"
cmDomain.include.13=javacardx.io.ConnectorPermission "file://*/~/", "read"
cmDomain.include.14=javacardx.spi.cardmgmt.CardManagementPermission "deploymentUnit.*"
cmDomain.include.15=javacardx.spi.cardmgmt.CardManagementPermission "application.*"
cmDomain.include.16=javacardx.spi.cardmgmt.CardManagementPermission "protectionDomain.*"
cmDomain.include.17=javacardx.spi.framework.JCREPermission "callPermJCREEPO.CARDMGMT"
#----//// [End] Platform Policy Default Protection Domains Configuration \\\\----#
#
#----//// Custom Protection Domains \\\\----#
# This is RI specific mechanism to assign a protection domain for an application.
# <JC_CONNECTED_HOME>/samples/keystore folder contains some keystore files. These protection domains are associated with
# each of those files. The BASE-64 encoded certificate is associated with each protection domain.
# Depending on the keystore file used to sign the application, corresponding protection domain is associated to that application.
# This is a way to add more permissions to default platform policy for application type by adding more include/exclude prmissions.
#
# <JC_CONNECTED_HOME>/samples/keystore/a.keystore
pd.0.certificate=MIIB8TCCAVqgAwIBAgIER+0X/zANBgkqhkiG9w0BAQUFADA9MQswCQYDVQQGEwJVUzELMAkGA1UEChMCUkkxFTATBgNVBAsTDEhvd1RvU2FtcGxlczEKMAgGA1UEAxMBQTAeFw0wODAzMjgxNjA4MzFaFw0wODA2MjYxNjA4MzFaMD0xCzAJBgNVBAYTAlVTMQswCQYDVQQKEwJSSTEVMBMGA1UECxMMSG93VG9TYW1wbGVzMQowCAYDVQQDEwFBMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCTIYVeLV+oyViuf8WOPQeo9AaydiuO5tWzHarb3ol3tY1o0xuooC9MpJEYyDTFBJ9YH9oNtemDU0YxswNtVbJropvwO9lVChn3OvXNfoFEYw8aeVl3pFHrAf4T+EL61Ybgi8PqW0OO/fEf6gkvbJkxy5S421gOrK191pIRTmyr5QIDAQABMA0GCSqGSIb3DQEBBQUAA4GBAD0ufB/7/hgx0Zp/T5kjuaWEc6hXB4wlRnXzfwjysvx8K2z2aSVGO5ZbJL8qCh3PQmZZZlpVTbxey/jijwylFiBT3rTonjdKFpv3pypt+3teXvvSfApnUrA7PlgPBgfkWR/UgzN9N6huOWNfJkkWuCsRhq47PpxYfdh1LeyLjuNR
pd.0.name=0
pd.0.include.0=javacardx.facilities.ServiceRegistryPermission "sio:///*", "register,unregister,lookup"
pd.0.include.1=javacardx.facilities.EventRegistryPermission "event:///*", "register,unregister,notify"
pd.0.include.2=javacardx.security.CryptoServicePermission "*"
pd.0.include.3=javacardx.framework.ContextPermission "/*", "transfer,switch"
pd.0.include.4=javacardx.facilities.EventRegistryPermission "event://aid/*", "notify,register,unregister"
pd.0.include.5=javacardx.facilities.ServiceRegistryPermission "sio://aid/*", "lookup,register,unregister"
pd.0.include.6=javacardx.framework.ContextPermission "pd:1", "transfer,switch"
#added for file system
pd.0.include.7=javacardx.io.ConnectorPermission "file:///~/*", "write"
pd.0.include.8=javacardx.io.ConnectorPermission "file://aid/~/*", "write"
pd.0.include.9=javacardx.io.ConnectorPermission "socket://*/*", "connect,listen,accept,read,write"
# <JC_CONNECTED_HOME>/samples/keystore/b.keystore
pd.1.certificate=MIIB8TCCAVqgAwIBAgIER+0v9jANBgkqhkiG9w0BAQUFADA9MQswCQYDVQQGEwJVUzELMAkGA1UEChMCUkkxFTATBgNVBAsTDEhvd1RvU2FtcGxlczEKMAgGA1UEAxMBQjAeFw0wODAzMjgxNzUwNDZaFw0wODA2MjYxNzUwNDZaMD0xCzAJBgNVBAYTAlVTMQswCQYDVQQKEwJSSTEVMBMGA1UECxMMSG93VG9TYW1wbGVzMQowCAYDVQQDEwFCMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCAwAK5KOHPZ9tPMW1fhI7ZMbf/8oKWPaXA4jysLBJZRujb9MHb4k8sXRryU+poaR2WfiWiEaf1e++Vg9WqiIZK/nWvkJM+RvLDjp/uXq771AreLeB6UCfCpyKuYkeNufSyBQb8y2Mw4ZaNimQuSou9N0z+cufwq32q4FklvezVZQIDAQABMA0GCSqGSIb3DQEBBQUAA4GBAG95Tg9tOrrQSOvxENy1dbHDueUam9wZ19a3torZNng5RG77048lj4V4VA+lMjFcw8dzB3KnPjePhUj3w/tBTNzXH/0lZ8K9MSxlXOVxF7/KcBEV3DluHS986um5LIEwcFqVgFf+Vg3jBMV3SE77tNAFVSmzhHETqIyLVr8sBV9P
pd.1.name=1
pd.1.include.0=javacardx.facilities.ServiceRegistryPermission "sio:///standard/auth/holder/global/foo/pin", "register,unregister"
pd.1.include.1=javacardx.framework.ContextPermission "pd:2", "transfer,switch"
pd.1.include.2=javacardx.facilities.ServiceRegistryPermission "sio:///*", "register,unregister,lookup"
#added for file system
pd.1.include.3=javacardx.io.ConnectorPermission "file:///~/*", "write"
# <JC_CONNECTED_HOME>/samples/keystore/c.keystore
pd.2.certificate=MIIB8TCCAVqgAwIBAgIER+0pITANBgkqhkiG9w0BAQUFADA9MQswCQYDVQQGEwJVUzELMAkGA1UEChMCUkkxFTATBgNVBAsTDEhvd1RvU2FtcGxlczEKMAgGA1UEAxMBQzAeFw0wODAzMjgxNzIxMzdaFw0wODA2MjYxNzIxMzdaMD0xCzAJBgNVBAYTAlVTMQswCQYDVQQKEwJSSTEVMBMGA1UECxMMSG93VG9TYW1wbGVzMQowCAYDVQQDEwFDMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDOkTtscaWeOTYVNormIhM5cS2ky/6U1gqU6mhuje6YaRxdIi35XfJozK4ydmASw9YE61jHjauRthljr2rC84/fjOfgHawYK8CSIpyKQ9q4T60u+SWJHb6ekJths7/KRGfPFzRew4Wkk/fR79Y7MgxkHkWar3iEvWaNkEgjWeognwIDAQABMA0GCSqGSIb3DQEBBQUAA4GBAFNEh6+6pfInBfozlHtK7TSuH1yEeDEcx/VKIHUNOmquobtckVLl6i1iMTT694w2pEeY7zMX4o53/TFJAWruyQFnil3XfS/Culz77gVJhT8w4xpdiVA/Grv8+zKMFqc45KsNjdYqk5sZW161Bate2sSQWzt4MGKqWMLGENmPWi5m
pd.2.name=2
pd.2.include.0=javacardx.facilities.TaskRegistryPermission "task.*"
pd.2.include.1=javacardx.framework.ContextPermission "pd:0", "transfer,switch"
pd.2.include.2=javacardx.io.ConnectorPermission "ssl://*/*", "connect,listen,accept,read,write"
pd.2.include.3=javacardx.io.ConnectorPermission "http://*/*", "connect,listen,accept,read,write"
pd.2.include.4=javacardx.io.ConnectorPermission "https://*/*", "connect,listen,accept,read,write"
pd.2.include.5=javacardx.io.ConnectorPermission "file://*/*", "connect,listen,accept,read,write"
pd.2.include.6=javacardx.io.ConnectorPermission "socket://*/*", "connect,listen,accept,read,write"
pd.2.include.7=javacardx.facilities.ServiceRegistryPermission "sio:///*", "register,unregister,lookup"
pd.2.include.8=javacardx.facilities.EventRegistryPermission "event:///*", "register,unregister,notify"
pd.2.include.9=javacardx.framework.JCRuntimePermission "credentialManager.*"
pd.2.include.10=javacardx.framework.JCRuntimePermission "thread.*"
pd.2.include.11=javacardx.security.CryptoServicePermission "*"
#----//// [End] Custom Protection Domains \\\\----#
#
#----//// Authenticators Configuration \\\\----#
# Configure authenticators used by RI
#
authenticator.0.uri: sio:///standard/auth/holder/session/admin/pin
authenticator.0.factory: com.sun.javacard.security.PINSessionAuthenticatorFactory
authenticator.0.pin: 1234
authenticator.0.digest: false
#
authenticator.1.uri: sio:///standard/auth/user/session/admin/pin
authenticator.1.factory: com.sun.javacard.security.PINSessionAuthenticatorFactory
authenticator.1.pin: 1234
authenticator.1.digest: false
#
authenticator.2.uri: sio:///standard/auth/holder/global/owner1/pin
authenticator.2.factory: com.sun.javacard.security.PINGlobalAuthenticatorFactory
authenticator.2.pin: 1234
authenticator.2.digest: false
#
authenticator.3.uri: sio:///standard/auth/holder/global/sunny/pin
authenticator.3.factory: com.sun.javacard.security.PINGlobalAuthenticatorFactory
authenticator.3.pin: 1234
authenticator.3.digest: false
#
authenticator.4.uri: sio:///standard/auth/user/session/boss/pin
authenticator.4.factory: com.sun.javacard.security.PINSessionAuthenticatorFactory
authenticator.4.pin: 5678
authenticator.4.digest: false
#
authenticator.5.uri: sio:///standard/auth/holder/global/admin/pin
authenticator.5.factory: com.sun.javacard.security.PINGlobalAuthenticatorFactory
authenticator.5.pin: 1234
authenticator.5.digest: false
# bio auth user
authenticator.6.uri: sio:///standard/auth/user/session/hk/bio-password
authenticator.6.factory: com.sun.javacard.security.BioSessionAuthenticatorFactory
authenticator.6.pin: testing
authenticator.6.digest: false
# transit app pos card holder
authenticator.7.uri: sio:///standard/auth/holder/session/transit/owner-pos/pin
authenticator.7.factory: com.sun.javacard.security.PINSessionAuthenticatorFactory
authenticator.7.pin: 8888
authenticator.7.digest: false
# transit app admin card holder 
authenticator.8.uri: sio:///standard/auth/holder/global/transit/owner-admin/pin
authenticator.8.factory: com.sun.javacard.security.PINGlobalAuthenticatorFactory
authenticator.8.pin: 8888
authenticator.8.digest: false
# transit app admin remote user
authenticator.9.uri: sio:///standard/auth/user/session/transit/remote-admin/pin
authenticator.9.factory: com.sun.javacard.security.PINSessionAuthenticatorFactory
authenticator.9.pin: 8888
authenticator.9.digest: false
# transit app pos guest card holder
authenticator.10.uri: sio:///standard/auth/holder/session/transit/guest-pos/pin
authenticator.10.factory: com.sun.javacard.security.PINSessionAuthenticatorFactory
authenticator.10.pin: 8888
authenticator.10.digest: false
# authenticators for digest authentication
authenticator.11.uri: sio:///standard/auth/holder/session/digest-admin/pin
authenticator.11.factory: com.sun.javacard.security.PINSessionAuthenticatorFactory
authenticator.11.pin: 1234
authenticator.11.digest: true
#
authenticator.12.uri: sio:///standard/auth/user/session/digest-user/pin
authenticator.12.factory: com.sun.javacard.security.PINSessionAuthenticatorFactory
authenticator.12.pin: 1234
authenticator.12.digest: true
#
authenticator.13.uri: sio:///standard/auth/user/session/hk/password
authenticator.13.factory: com.sun.javacard.security.PasswordSessionAuthenticatorFactory
authenticator.13.pin: testing
authenticator.13.digest: false
#----//// [End] Authenticators Configuration \\\\----#
#
#----//// Credential Manager Defaults \\\\----#
# CAs used for trust determination in the normal SSL handshake
# VeriSign Class 3 Public Primary Certification Authority - G2
ssl.trusted.ca.0=MIIDAjCCAmsCEH3Z/gfPqB63EHln+6eJNMYwDQYJKoZIhvcNAQEFBQAwgcExCzAJBgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjE8MDoGA1UECxMzQ2xhc3MgMyBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEcyMTowOAYDVQQLEzEoYykgMTk5OCBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMB4XDTk4MDUxODAwMDAwMFoXDTI4MDgwMTIzNTk1OVowgcExCzAJBgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjE8MDoGA1UECxMzQ2xhc3MgMyBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEcyMTowOAYDVQQLEzEoYykgMTk5OCBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDMXtERXVxp0KvTuWpMmR9ZmDCOFoUgRm1HP9SFIIThbbP4pO0M8RcPO/mn+SXXwc+EY/J8Y8+iR/LGWzOOZEAEaMGAuWQcRXfH2G71lSk8UOg013gfqLptQ5GVj0VXXn7F+8qkBOvqlzdUMG+7AUcyM83cV5tkaWH4mx0ciU9cZwIDAQABMA0GCSqGSIb3DQEBBQUAA4GBAFFNzb5cy5gZnBWyATl4Lk0PZ3BwmcYQWpSkU01UbSuvDV1Ai2TT1+7eVmGSX6bEHRBhNtMsJzzoKQm5EWR0zLVznxxIqbxhAe7iF6YM40AIOw7n60RzKprxaZLvcRTDOaxxp5EJb+RxBrO6WVcmeQD2+A2iMzAo1KpYoJ2daZH9
# our CA root
ssl.trusted.ca.1=MIIC+zCCAmSgAwIBAgIJANyV276phVfFMA0GCSqGSIb3DQEBBQUAMF0xCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpTb21lLVN0YXRlMRUwEwYDVQQKEwxIb3dUb1NhbXBsZXMxCzAJBgNVBAsTAlJJMRUwEwYDVQQDEwxIb3dUb1NhbXBsZXMwHhcNMDgwMzI3MjEwNTIyWhcNMTgwMzI1MjEwNTIyWjBdMQswCQYDVQQGEwJVUzETMBEGA1UECBMKU29tZS1TdGF0ZTEVMBMGA1UEChMMSG93VG9TYW1wbGVzMQswCQYDVQQLEwJSSTEVMBMGA1UEAxMMSG93VG9TYW1wbGVzMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDiEg6Q/1H7z6Flu4vX8G20cgIhKNJfhzKGy6fFnNNyFSfhjcxnseJ1m2s+zdjN8FutwmqpYR0+4+impMMufj3NAP945jGiXTI7BS4TB7a3xsv8ZCn5PJI8cv7hxU5/+jqOfHEnbatfI7KEt69Dhi0XCTE9TaLCUE0tuhJq0JV35wIDAQABo4HCMIG/MB0GA1UdDgQWBBQwHYyR3nNaJME5E3MDhOUQzEFJ0TCBjwYDVR0jBIGHMIGEgBQwHYyR3nNaJME5E3MDhOUQzEFJ0aFhpF8wXTELMAkGA1UEBhMCVVMxEzARBgNVBAgTClNvbWUtU3RhdGUxFTATBgNVBAoTDEhvd1RvU2FtcGxlczELMAkGA1UECxMCUkkxFTATBgNVBAMTDEhvd1RvU2FtcGxlc4IJANyV276phVfFMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEFBQADgYEAqjE2QvQT3CNRQic326c4tdEMl4+Ik4joCoutPD218n9O3RthgMXFGiKZ6gkVqqNaNZ47W+Wnam/QBLZMDK1MImVGIBPPOYtqP9XOnyGxQ8f6Eq0AgHby9Dal+158WwCyOgXwGet/FnfKhcjp4mhU2Xb1qEvPCaJX7KPuhSNhIs8=
# accepted certificate issuers (used in client authentication)
ssl.accepted.issuer.0=MIIC+zCCAmSgAwIBAgIJANyV276phVfFMA0GCSqGSIb3DQEBBQUAMF0xCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpTb21lLVN0YXRlMRUwEwYDVQQKEwxIb3dUb1NhbXBsZXMxCzAJBgNVBAsTAlJJMRUwEwYDVQQDEwxIb3dUb1NhbXBsZXMwHhcNMDgwMzI3MjEwNTIyWhcNMTgwMzI1MjEwNTIyWjBdMQswCQYDVQQGEwJVUzETMBEGA1UECBMKU29tZS1TdGF0ZTEVMBMGA1UEChMMSG93VG9TYW1wbGVzMQswCQYDVQQLEwJSSTEVMBMGA1UEAxMMSG93VG9TYW1wbGVzMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDiEg6Q/1H7z6Flu4vX8G20cgIhKNJfhzKGy6fFnNNyFSfhjcxnseJ1m2s+zdjN8FutwmqpYR0+4+impMMufj3NAP945jGiXTI7BS4TB7a3xsv8ZCn5PJI8cv7hxU5/+jqOfHEnbatfI7KEt69Dhi0XCTE9TaLCUE0tuhJq0JV35wIDAQABo4HCMIG/MB0GA1UdDgQWBBQwHYyR3nNaJME5E3MDhOUQzEFJ0TCBjwYDVR0jBIGHMIGEgBQwHYyR3nNaJME5E3MDhOUQzEFJ0aFhpF8wXTELMAkGA1UEBhMCVVMxEzARBgNVBAgTClNvbWUtU3RhdGUxFTATBgNVBAoTDEhvd1RvU2FtcGxlczELMAkGA1UECxMCUkkxFTATBgNVBAMTDEhvd1RvU2FtcGxlc4IJANyV276phVfFMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEFBQADgYEAqjE2QvQT3CNRQic326c4tdEMl4+Ik4joCoutPD218n9O3RthgMXFGiKZ6gkVqqNaNZ47W+Wnam/QBLZMDK1MImVGIBPPOYtqP9XOnyGxQ8f6Eq0AgHby9Dal+158WwCyOgXwGet/FnfKhcjp4mhU2Xb1qEvPCaJX7KPuhSNhIs8=
# Certificate sent by cjcre when acting as HTTPS server. (signed by our CA root)
ssl.selfIdentityAsServer=MIICJTCCAY4CAQkwDQYJKoZIhvcNAQEEBQAwXTELMAkGA1UEBhMCVVMxEzARBgNVBAgTClNvbWUtU3RhdGUxFTATBgNVBAoTDEhvd1RvU2FtcGxlczELMAkGA1UECxMCUkkxFTATBgNVBAMTDEhvd1RvU2FtcGxlczAeFw0xMDAzMjUyMDQ2MjhaFw0xMTAzMjUyMDQ2MjhaMFkxCzAJBgNVBAYTAkFVMRMwEQYDVQQIEwpTb21lLVN0YXRlMSEwHwYDVQQKExhJbnRlcm5ldCBXaWRnaXRzIFB0eSBMdGQxEjAQBgNVBAMTCWxvY2FsaG9zdDCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA8iU6cOGSsn75Pqh7gJu1CbMX6/LKKRoruEtS+ivq0+QzDQjjOo9lKfy3HbSWcLoEkZMfQbd1Xlr/aBtNu+p2Gc4O/ORrX4wK/7PikQRDxbWWUIEpRC8eXvg/wZG6sEVt+o0BCxmkXUAo89v/j0urGjA/fkSbe6s3etrPjkT55HcCAwEAATANBgkqhkiG9w0BAQQFAAOBgQCallptZqbrBfiC6azWRhZsd1d/zF3ODV4gTLvRZcvFhRUxMUAVU5eiieWPXHWrabJI/HyNg30aMtPuyIoNRVnH+oqqMubJVFR31D03UJlRs6Hjxi4VCUNeHfNgPWNFhToklNY+Laj0zgR9xeSHMG9ke3zzF0B1gV3HiUBsuECOcA==
# private key for ssl.selfIdentityAsServer
ssl.selfIdentitySSLPrivateKeyExp=sxNLI/3+clkq1Obe5x7ABRtYnpsgXMNI//NcuzzNXsTN6F7hRQaVJzcI6UQLWfSHum0WWZBmkVA0wHYox8c+bKjELIlCv2n9x/gZJ+FgF+Z3wQbWnlYts0ECrtJxFNVkugT2e80h2FFYRGClkesMLFMBfF9tMqJw9hD0iPLPJoE=
ssl.selfIdentitySSLPrivateKeyMod=8iU6cOGSsn75Pqh7gJu1CbMX6/LKKRoruEtS+ivq0+QzDQjjOo9lKfy3HbSWcLoEkZMfQbd1Xlr/aBtNu+p2Gc4O/ORrX4wK/7PikQRDxbWWUIEpRC8eXvg/wZG6sEVt+o0BCxmkXUAo89v/j0urGjA/fkSbe6s3etrPjkT55Hc=
# PSK Identity Hint
PSKIdentityHint=X509
#----//// [End] Credential Manager Defaults \\\\----#
#
#----//// Crypto Providers \\\\----#
# classes are expected to be ROMized.
# Only the listed CryptoProviders are registered.
# Note: The index sequence is important. 
crypto.provider.0=com.sun.javacard.crypto.SunProvider
#cryptoProvider.1=my.romized.MyProvider
#
#End of configuration